{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../api/api\";\n//Generic CreateAsyncThunk\n//1 параметр - возвращаемое значение в случае fulfilled\n//2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n//3 параметр - типизация thunkApi\nexport const getLogin = createAsyncThunk('get/login', // payloadCreator\nasync (params, thunkApi) => {\n  // const posts = await api.get<Array<PostItem>>('/posts', {\n  const login = await api.post('/users/login', {\n    data: {\n      \"user\": {\n        \"email\": \"napadaylo2@gmail.com\",\n        \"password\": \"simple commentwww 2\"\n      }\n    },\n    headers: {}\n  });\n\n  if (login.status >= 400) {\n    return thunkApi.rejectWithValue({\n      message: 'Не удалось получить пользователя'\n    });\n  }\n\n  console.log(login.data, 'login-data');\n  return login.data;\n});","map":{"version":3,"names":["createAsyncThunk","api","getLogin","params","thunkApi","login","post","data","headers","status","rejectWithValue","message","console","log"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/thunks/login.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../api/api\";\n\n\nexport interface ILogin {\n    id: number,\n    username: string,\n    email: string;\n    bio: string;\n    image: string;\n    token: string;\n}\n\n//Generic CreateAsyncThunk\n//1 параметр - возвращаемое значение в случае fulfilled\n//2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n//3 параметр - типизация thunkApi\nexport const getLogin = createAsyncThunk<any>('get/login',\n    // payloadCreator\n    async (params, thunkApi) => {\n\n        // const posts = await api.get<Array<PostItem>>('/posts', {\n        const login = await api.post<Array<any>>('/users/login', {\n            data: {\n                \"user\": {\n                    \"email\": \"napadaylo2@gmail.com\",\n                    \"password\": \"simple commentwww 2\"\n                }\n            },\n            headers: {}\n        })\n\n        if (login.status >= 400) {\n            return thunkApi.rejectWithValue({\n                message: 'Не удалось получить пользователя'\n            })\n        }\n        console.log(login.data, 'login-data')\n\n        return login.data;\n    }\n)\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,QAAoB,eAApB;AAYA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAM,WAAN,EACpC;AACA,OAAOG,MAAP,EAAeC,QAAf,KAA4B;EAExB;EACA,MAAMC,KAAK,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAqB,cAArB,EAAqC;IACrDC,IAAI,EAAE;MACF,QAAQ;QACJ,SAAS,sBADL;QAEJ,YAAY;MAFR;IADN,CAD+C;IAOrDC,OAAO,EAAE;EAP4C,CAArC,CAApB;;EAUA,IAAIH,KAAK,CAACI,MAAN,IAAgB,GAApB,EAAyB;IACrB,OAAOL,QAAQ,CAACM,eAAT,CAAyB;MAC5BC,OAAO,EAAE;IADmB,CAAzB,CAAP;EAGH;;EACDC,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACE,IAAlB,EAAwB,YAAxB;EAEA,OAAOF,KAAK,CAACE,IAAb;AACH,CAvBmC,CAAjC"},"metadata":{},"sourceType":"module"}