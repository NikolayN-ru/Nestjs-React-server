{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../api/api\";\n//Generic CreateAsyncThunk\n//1 параметр - возвращаемое значение в случае fulfilled\n//2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n//3 параметр - типизация thunkApi\nexport const changeUser = createAsyncThunk('change/user', // <- что суда пишем ?\n// payloadCreator\nasync (query, thunkApi) => {\n  // console.log(query.email, query.password, 'queryquery')\n  // const posts = await api.get<Array<PostItem>>('/posts', {\n  console.log('query-bio!!!', query.bio); // JSON.stringify()\n\n  const change = await api.put('/users/user', JSON.stringify({\n    \"user\": {\n      \"bio\": query.bio\n    },\n    \"headers\": {\n      // 'Content-Type': 'application/json',\n      \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwidXNlcm5hbWUiOiJQZXR5YTIiLCJlbWFpbCI6Im5hcGFkYXlsbzJAZ21haWwuY29tIiwiaWF0IjoxNjYxMzM2OTI3fQ.aThUXR0_aVoeAVQbnCEfN6T5s5eoDrEIBIfNxcidqzg\"\n    }\n  }));\n\n  if (change.status >= 400) {\n    return thunkApi.rejectWithValue({\n      message: 'Не удалось поменять данные'\n    });\n  } // console.log(login.data, 'login-data')\n\n\n  return change.data;\n});","map":{"version":3,"names":["createAsyncThunk","api","changeUser","query","thunkApi","console","log","bio","change","put","JSON","stringify","status","rejectWithValue","message","data"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/thunks/shangeUser.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { api } from \"../../api/api\";\n\n\nexport interface ILogin {\n    id: number,\n    username: string,\n    email: string;\n    bio: string;\n    image: string;\n    token: string;\n}\n\n//Generic CreateAsyncThunk\n//1 параметр - возвращаемое значение в случае fulfilled\n//2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n//3 параметр - типизация thunkApi\nexport const changeUser = createAsyncThunk<any, any, any>(\n    'change/user', // <- что суда пишем ?\n    // payloadCreator\n    async (query, thunkApi) => {\n        // console.log(query.email, query.password, 'queryquery')\n        // const posts = await api.get<Array<PostItem>>('/posts', {\n        console.log('query-bio!!!', query.bio);\n\n        // JSON.stringify()\n\n        const change = await api.put<any>('/users/user',\n            JSON.stringify(\n                {\n                    \"user\": {\n                        \"bio\": query.bio,\n                    },\n                    \"headers\": {\n                        // 'Content-Type': 'application/json',\n                        \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwidXNlcm5hbWUiOiJQZXR5YTIiLCJlbWFpbCI6Im5hcGFkYXlsbzJAZ21haWwuY29tIiwiaWF0IjoxNjYxMzM2OTI3fQ.aThUXR0_aVoeAVQbnCEfN6T5s5eoDrEIBIfNxcidqzg\"\n                    }\n                },\n            )\n        )\n\n        if (change.status >= 400) {\n            return thunkApi.rejectWithValue({\n                message: 'Не удалось поменять данные'\n            })\n        }\n        // console.log(login.data, 'login-data')\n        return change.data;\n    }\n)\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,GAAT,QAAoB,eAApB;AAYA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACtC,aADsC,EACvB;AACf;AACA,OAAOG,KAAP,EAAcC,QAAd,KAA2B;EACvB;EACA;EACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAAK,CAACI,GAAlC,EAHuB,CAKvB;;EAEA,MAAMC,MAAM,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAa,aAAb,EACjBC,IAAI,CAACC,SAAL,CACI;IACI,QAAQ;MACJ,OAAOR,KAAK,CAACI;IADT,CADZ;IAII,WAAW;MACP;MACA,iBAAiB;IAFV;EAJf,CADJ,CADiB,CAArB;;EAcA,IAAIC,MAAM,CAACI,MAAP,IAAiB,GAArB,EAA0B;IACtB,OAAOR,QAAQ,CAACS,eAAT,CAAyB;MAC5BC,OAAO,EAAE;IADmB,CAAzB,CAAP;EAGH,CAzBsB,CA0BvB;;;EACA,OAAON,MAAM,CAACO,IAAd;AACH,CA/BqC,CAAnC"},"metadata":{},"sourceType":"module"}