{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  filter: []\n};\nconst FilerProduct = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    filterProduct(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      // todo filter coast\n      console.log(payload, state['GET']);\n      state.filter.forEach(item => {});\n    }\n\n  }\n});\nexport const FilerProductReduser = FilerProduct.reducer;\nexport const {\n  filterProduct\n} = FilerProduct.actions;","map":{"version":3,"names":["createSlice","initialState","filter","FilerProduct","name","reducers","filterProduct","state","payload","console","log","forEach","item","FilerProductReduser","reducer","actions"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/reducers/filterReducer/filterReducer.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nconst initialState: any = {\n    filter: []\n}\n\nconst FilerProduct = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        \n        filterProduct(state, { payload }: PayloadAction<any>) {\n            // todo filter coast\n            console.log(payload, state['GET']);\n            state.filter.forEach((item: any) => {})\n        },\n    },\n})\n\nexport const FilerProductReduser = FilerProduct.reducer;\nexport const { filterProduct } = FilerProduct.actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,MAAMC,YAAiB,GAAG;EACtBC,MAAM,EAAE;AADc,CAA1B;AAIA,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,QADuB;EAE7BH,YAF6B;EAG7BI,QAAQ,EAAE;IAENC,aAAa,CAACC,KAAD,QAAyC;MAAA,IAAjC;QAAEC;MAAF,CAAiC;MAClD;MACAC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBD,KAAK,CAAC,KAAD,CAA1B;MACAA,KAAK,CAACL,MAAN,CAAaS,OAAb,CAAsBC,IAAD,IAAe,CAAE,CAAtC;IACH;;EANK;AAHmB,CAAD,CAAhC;AAaA,OAAO,MAAMC,mBAAmB,GAAGV,YAAY,CAACW,OAAzC;AACP,OAAO,MAAM;EAAER;AAAF,IAAoBH,YAAY,CAACY,OAAvC"},"metadata":{},"sourceType":"module"}