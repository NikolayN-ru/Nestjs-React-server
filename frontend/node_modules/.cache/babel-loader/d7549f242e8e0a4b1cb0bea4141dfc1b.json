{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: []\n};\nconst Cart = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCartProduct(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      // todo - переписать нормально\n      const newItem = [...state.cart];\n      let s = 0;\n      newItem.forEach(item => {\n        if (item.id === payload.id && item.color === payload.color) {\n          // console.log('ODINAKOVI ', payload.id);\n          item.quantity += payload.quantity;\n          s = 1;\n          return;\n        }\n      });\n\n      if (!s) {\n        newItem.push(payload);\n      }\n\n      state.cart = newItem;\n    },\n\n    delCartProduct(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.cart = [...state.cart].filter(item => item.id !== payload.id || item.color !== payload.color);\n    }\n\n  }\n});\nexport const CartProductReduser = Cart.reducer;\nexport const {\n  setCartProduct,\n  delCartProduct\n} = Cart.actions;","map":{"version":3,"names":["createSlice","initialState","cart","Cart","name","reducers","setCartProduct","state","payload","newItem","s","forEach","item","id","color","quantity","push","delCartProduct","filter","CartProductReduser","reducer","actions"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/reducers/cartReducer/cartReducer.ts"],"sourcesContent":["import { createSlice, isAnyOf, PayloadAction } from \"@reduxjs/toolkit\";\n\n\ninterface CartProduct {\n    id?: string;\n    category?: string;\n    name?: string;\n    price?: number;\n    image?: string;\n    quantity?: number;\n    color?: string;\n}\n\ninterface CartProducts {\n    items: Array<CartProduct>;\n}\n\nconst initialState: CartProducts | any = {\n    cart: []\n}\n\n\nconst Cart = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        setCartProduct(state, { payload }: PayloadAction<CartProduct>) {\n            // todo - переписать нормально\n\n            const newItem = [...state.cart];\n            let s = 0;\n            newItem.forEach((item: any) => {\n\n                if (item.id === payload.id && item.color === payload.color) {\n                    // console.log('ODINAKOVI ', payload.id);\n                    item.quantity += payload.quantity;\n                    s = 1;\n                    return\n                }\n            })\n            if (!s) { newItem.push(payload); }\n            state.cart = newItem;\n        },\n\n        delCartProduct(state, { payload }: PayloadAction<CartProduct>) {\n            state.cart = [...state.cart].filter(item => item.id !== payload.id || item.color !== payload.color)\n        },\n\n    },\n\n})\n\nexport const CartProductReduser = Cart.reducer;\nexport const { setCartProduct, delCartProduct } = Cart.actions"],"mappings":"AAAA,SAASA,WAAT,QAAoD,kBAApD;AAiBA,MAAMC,YAAgC,GAAG;EACrCC,IAAI,EAAE;AAD+B,CAAzC;AAKA,MAAMC,IAAI,GAAGH,WAAW,CAAC;EACrBI,IAAI,EAAE,MADe;EAErBH,YAFqB;EAGrBI,QAAQ,EAAE;IACNC,cAAc,CAACC,KAAD,QAAiD;MAAA,IAAzC;QAAEC;MAAF,CAAyC;MAC3D;MAEA,MAAMC,OAAO,GAAG,CAAC,GAAGF,KAAK,CAACL,IAAV,CAAhB;MACA,IAAIQ,CAAC,GAAG,CAAR;MACAD,OAAO,CAACE,OAAR,CAAiBC,IAAD,IAAe;QAE3B,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAApB,IAA0BD,IAAI,CAACE,KAAL,KAAeN,OAAO,CAACM,KAArD,EAA4D;UACxD;UACAF,IAAI,CAACG,QAAL,IAAiBP,OAAO,CAACO,QAAzB;UACAL,CAAC,GAAG,CAAJ;UACA;QACH;MACJ,CARD;;MASA,IAAI,CAACA,CAAL,EAAQ;QAAED,OAAO,CAACO,IAAR,CAAaR,OAAb;MAAwB;;MAClCD,KAAK,CAACL,IAAN,GAAaO,OAAb;IACH,CAjBK;;IAmBNQ,cAAc,CAACV,KAAD,SAAiD;MAAA,IAAzC;QAAEC;MAAF,CAAyC;MAC3DD,KAAK,CAACL,IAAN,GAAa,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBgB,MAAhB,CAAuBN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAApB,IAA0BD,IAAI,CAACE,KAAL,KAAeN,OAAO,CAACM,KAAhF,CAAb;IACH;;EArBK;AAHW,CAAD,CAAxB;AA8BA,OAAO,MAAMK,kBAAkB,GAAGhB,IAAI,CAACiB,OAAhC;AACP,OAAO,MAAM;EAAEd,cAAF;EAAkBW;AAAlB,IAAqCd,IAAI,CAACkB,OAAhD"},"metadata":{},"sourceType":"module"}