{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ProductsReducer } from \"./productsReducer/productsReducer\";\nconst rootReduser = combineReducers({\n  products: ProductsReducer\n});\nexport const store = configureStore({\n  reducer: rootReducer\n});\nexport const useAppDispatch = useDispatch;\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","useSelector","ProductsReducer","rootReduser","products","store","reducer","rootReducer","useAppDispatch","useAppSelector"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { ProductsReducer } from \"./productsReducer/productsReducer\";\n\n\nconst rootReduser = combineReducers({\n    products: ProductsReducer\n})\n\nexport const store = configureStore({\n    reducer: rootReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAGA,MAAMC,WAAW,GAAGL,eAAe,CAAC;EAChCM,QAAQ,EAAEF;AADsB,CAAD,CAAnC;AAIA,OAAO,MAAMG,KAAK,GAAGN,cAAc,CAAC;EAChCO,OAAO,EAAEC;AADuB,CAAD,CAA5B;AAMP,OAAO,MAAMC,cAAiC,GAAGR,WAA1C;AACP,OAAO,MAAMS,cAA+C,GAAGR,WAAxD"},"metadata":{},"sourceType":"module"}