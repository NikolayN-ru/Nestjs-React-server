{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // import { setCartProduct } from \"../../thunks/setCartProduct\";\n\nconst initialState = {\n  cart: []\n};\nconst Cart = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // обычный редюсер !! ?\n    // setCartProduct(state, action: PayloadAction<CartProduct>) {\n    //     // !! искать айдишник в стейте - и менять количество\n    //     // todo вынести в отдельную функцию\n    // },\n    setCartProduct(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      // state.cart.items.push(payload);\n      state.cart.items.forEatch(item => {\n        item.id === payload.id;\n        console.log('ODINAKOVI ', payload.id);\n      }); // if (payload.id?.includes(state.cart.items))\n\n      state.cart.push(payload);\n    } //убрать товар из корзины ??\n\n\n  },\n  extraReducers: builder => {// builder\n    // .addMatcher(\n    //     isAnyOf(setCartProduct.fulfilled),\n    //     (state, action: PayloadAction<any>) => {\n    //         // console.log(state, 'state!!--cart');\n    //         // console.log(action.payload, 'action.payload');\n    //         state.cart.push(action.payload)\n    //     }\n    // );\n  }\n});\nexport const CartProductReduser = Cart.reducer;\nexport const {\n  setCartProduct\n} = Cart.actions;","map":{"version":3,"names":["createSlice","initialState","cart","Cart","name","reducers","setCartProduct","state","payload","items","forEatch","item","id","console","log","push","extraReducers","builder","CartProductReduser","reducer","actions"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/reducers/cartReducer/cartReducer.ts"],"sourcesContent":["import { createSlice, isAnyOf, PayloadAction } from \"@reduxjs/toolkit\";\n// import { setCartProduct } from \"../../thunks/setCartProduct\";\n\n\ninterface CartProduct {\n    id?: string;\n    category?: string;\n    name?: string;\n    price?: number;\n    image?: string;\n    quantity?: number;\n}\n\ninterface CartProducts {\n    items: Array<CartProduct>;\n}\n\nconst initialState: CartProducts | any = {\n    cart: []\n}\n\nconst Cart = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        // обычный редюсер !! ?\n        // setCartProduct(state, action: PayloadAction<CartProduct>) {\n\n        //     // !! искать айдишник в стейте - и менять количество\n\n        //     // todo вынести в отдельную функцию\n\n        // },\n\n        setCartProduct(state, { payload }: PayloadAction<CartProduct>) {\n            // state.cart.items.push(payload);\n            state.cart.items.forEatch((item: CartProduct) => {\n                item.id === payload.id\n                console.log('ODINAKOVI ', payload.id)\n            }\n            )\n            // if (payload.id?.includes(state.cart.items))\n            state.cart.push(payload);\n        }\n\n        //убрать товар из корзины ??\n    },\n    extraReducers: (builder) => {\n        // builder\n        // .addMatcher(\n        //     isAnyOf(setCartProduct.fulfilled),\n        //     (state, action: PayloadAction<any>) => {\n        //         // console.log(state, 'state!!--cart');\n        //         // console.log(action.payload, 'action.payload');\n        //         state.cart.push(action.payload)\n        //     }\n        // );\n    },\n\n})\n\nexport const CartProductReduser = Cart.reducer;\nexport const { setCartProduct } = Cart.actions"],"mappings":"AAAA,SAASA,WAAT,QAAoD,kBAApD,C,CACA;;AAgBA,MAAMC,YAAgC,GAAG;EACrCC,IAAI,EAAE;AAD+B,CAAzC;AAIA,MAAMC,IAAI,GAAGH,WAAW,CAAC;EACrBI,IAAI,EAAE,MADe;EAErBH,YAFqB;EAGrBI,QAAQ,EAAE;IACN;IACA;IAEA;IAEA;IAEA;IAEAC,cAAc,CAACC,KAAD,QAAiD;MAAA,IAAzC;QAAEC;MAAF,CAAyC;MAC3D;MACAD,KAAK,CAACL,IAAN,CAAWO,KAAX,CAAiBC,QAAjB,CAA2BC,IAAD,IAAuB;QAC7CA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB;QACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,OAAO,CAACI,EAAlC;MACH,CAHD,EAF2D,CAO3D;;MACAL,KAAK,CAACL,IAAN,CAAWa,IAAX,CAAgBP,OAAhB;IACH,CAnBK,CAqBN;;;EArBM,CAHW;EA0BrBQ,aAAa,EAAGC,OAAD,IAAa,CACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH;AApCoB,CAAD,CAAxB;AAwCA,OAAO,MAAMC,kBAAkB,GAAGf,IAAI,CAACgB,OAAhC;AACP,OAAO,MAAM;EAAEb;AAAF,IAAqBH,IAAI,CAACiB,OAAhC"},"metadata":{},"sourceType":"module"}