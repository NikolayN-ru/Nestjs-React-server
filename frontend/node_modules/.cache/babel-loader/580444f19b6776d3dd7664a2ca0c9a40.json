{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\"; //Generic CreateAsyncThunk\n//1 параметр - возвращаемое значение в случае fulfilled\n//2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n//3 параметр - типизация thunkApi\n\nexport const getArticles = createAsyncThunk('get/articles', //payloadCreator\nasync (_, thunkApi) => {\n  if (true) {\n    return [''];\n  }\n\n  return thunkApi.rejectWithValue({\n    message: ''\n  });\n});","map":{"version":3,"names":["createAsyncThunk","getArticles","_","thunkApi","rejectWithValue","message"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/thunks/articles.ts"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\n\n //Generic CreateAsyncThunk\n //1 параметр - возвращаемое значение в случае fulfilled\n //2 параметр - аргументы payloadCreator, которые падают в _ (первый аргумент payloadCreator)\n //3 параметр - типизация thunkApi\n export const getArticles = createAsyncThunk<Array<string>, void, { rejectValue: { message: string } }>(\n \t'get/articles',\n \t//payloadCreator\n \tasync (_, thunkApi) => {\n\n \t\tif(true){\n \t\t\treturn ['']\n \t\t}\n\n \t\treturn thunkApi.rejectWithValue({\n \t\t\tmessage: ''\n \t\t})\n \t}\n )"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,kBAA/B,C,CAGC;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CAC1C,cAD0C,EAE1C;AACA,OAAOE,CAAP,EAAUC,QAAV,KAAuB;EAEtB,IAAG,IAAH,EAAQ;IACP,OAAO,CAAC,EAAD,CAAP;EACA;;EAED,OAAOA,QAAQ,CAACC,eAAT,CAAyB;IAC/BC,OAAO,EAAE;EADsB,CAAzB,CAAP;AAGA,CAZyC,CAApC"},"metadata":{},"sourceType":"module"}