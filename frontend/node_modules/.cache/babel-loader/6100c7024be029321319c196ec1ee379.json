{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CartProductReduser } from \"./reducers/cartReducer/cartReducer\";\nimport { ProductItemReducer } from './reducers/productItemReducer/productItemReducer';\nimport { ProductsReducer } from \"./reducers/productsReducer/productsReducer\";\nimport { TagsReducer } from \"./reducers/tagReducer/tagReducer\";\nimport { UserReducer } from \"./reducers/userReducer/userReducer\"; // мерджим редюсеры в один\n\nconst rootReducer = combineReducers({\n  products: ProductsReducer,\n  productItem: ProductItemReducer,\n  user: UserReducer,\n  tags: TagsReducer,\n  cart: CartProductReduser\n}); // создаем стор - передаем туда объект - редюсер\n\nexport const store = configureStore({\n  reducer: rootReducer\n}); // типы для useDispatch и useSelector\n\n// типизируем useDispatch\nexport const useAppDispatch = useDispatch; // типизируем useSelector\n\nexport const useAppSelector = useSelector; // useAppSelector(state => state.products) обращение к стору","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","useSelector","CartProductReduser","ProductItemReducer","ProductsReducer","TagsReducer","UserReducer","rootReducer","products","productItem","user","tags","cart","store","reducer","useAppDispatch","useAppSelector"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { CartProductReduser } from \"./reducers/cartReducer/cartReducer\";\nimport { ProductItemReducer } from './reducers/productItemReducer/productItemReducer';\nimport { ProductsReducer } from \"./reducers/productsReducer/productsReducer\";\nimport { TagsReducer } from \"./reducers/tagReducer/tagReducer\";\nimport { UserReducer } from \"./reducers/userReducer/userReducer\";\n\n// мерджим редюсеры в один\nconst rootReducer = combineReducers({\n    products: ProductsReducer,\n    productItem: ProductItemReducer,\n    user: UserReducer,\n    tags: TagsReducer,\n    cart: CartProductReduser\n})\n\n// создаем стор - передаем туда объект - редюсер\nexport const store = configureStore({\n    reducer: rootReducer\n})\n\n// типы для useDispatch и useSelector\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\n\n// типизируем useDispatch\nexport const useAppDispatch: () => AppDispatch = useDispatch\n\n// типизируем useSelector\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n// useAppSelector(state => state.products) обращение к стору\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,kBAAT,QAAmC,kDAAnC;AACA,SAASC,eAAT,QAAgC,4CAAhC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,WAAT,QAA4B,oCAA5B,C,CAEA;;AACA,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAChCU,QAAQ,EAAEJ,eADsB;EAEhCK,WAAW,EAAEN,kBAFmB;EAGhCO,IAAI,EAAEJ,WAH0B;EAIhCK,IAAI,EAAEN,WAJ0B;EAKhCO,IAAI,EAAEV;AAL0B,CAAD,CAAnC,C,CAQA;;AACA,OAAO,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAChCe,OAAO,EAAEP;AADuB,CAAD,CAA5B,C,CAIP;;AAIA;AACA,OAAO,MAAMQ,cAAiC,GAAGf,WAA1C,C,CAEP;;AACA,OAAO,MAAMgB,cAA+C,GAAGf,WAAxD,C,CAEP"},"metadata":{},"sourceType":"module"}