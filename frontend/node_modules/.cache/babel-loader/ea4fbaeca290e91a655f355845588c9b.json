{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: []\n};\nconst Cart = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // обычный редюсер !! ?\n    // setCartProduct(state, action: PayloadAction<CartProduct>) {\n    //     // !! искать айдишник в стейте - и менять количество\n    //     // todo вынести в отдельную функцию\n    // },\n    setCartProduct(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      // todo - переписать нормально\n      let s = 0;\n      state.cart.forEach(item => {\n        if (item.id === payload.id && item.color === payload.color) {\n          // console.log('ODINAKOVI ', payload.id);\n          item.quantity += payload.quantity;\n          s = 1;\n          return;\n        }\n      });\n\n      if (!s) {\n        state.cart.push(payload);\n      }\n    },\n\n    // todo удалить товар из корзины ??\n    delCartProduct(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.cart.forEach((item, idx) => {\n        // console.log(state.cart[0].id, 'id-cart');\n        if (item.id === payload.id && item.color === payload.color) {\n          // console.log('item-delete - product', item.id, idx);\n          item.quantity = 0; // const newState = [...state.cart(0, idx + 1), ...state.cart(idx)]\n          // state.cart = newState\n        }\n      });\n    }\n\n  },\n  extraReducers: builder => {// builder\n    // .addMatcher(\n    //     isAnyOf(setCartProduct.fulfilled),\n    //     (state, action: PayloadAction<any>) => {\n    //         // console.log(state, 'state!!--cart');\n    //         // console.log(action.payload, 'action.payload');\n    //         state.cart.push(action.payload)\n    //     }\n    // );\n  }\n});\nexport const CartProductReduser = Cart.reducer;\nexport const {\n  setCartProduct,\n  delCartProduct\n} = Cart.actions;","map":{"version":3,"names":["createSlice","initialState","cart","Cart","name","reducers","setCartProduct","state","payload","s","forEach","item","id","color","quantity","push","delCartProduct","idx","extraReducers","builder","CartProductReduser","reducer","actions"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/reducers/cartReducer/cartReducer.ts"],"sourcesContent":["import { createSlice, isAnyOf, PayloadAction } from \"@reduxjs/toolkit\";\nimport { useAppSelector } from \"../..\";\n// import { setCartProduct } from \"../../thunks/setCartProduct\";\n\n\ninterface CartProduct {\n    id?: string;\n    category?: string;\n    name?: string;\n    price?: number;\n    image?: string;\n    quantity?: number;\n    color?: string;\n}\n\ninterface CartProducts {\n    items: Array<CartProduct>;\n}\n\nconst initialState: CartProducts | any = {\n    cart: []\n}\n\n\n\nconst Cart = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        // обычный редюсер !! ?\n        // setCartProduct(state, action: PayloadAction<CartProduct>) {\n\n        //     // !! искать айдишник в стейте - и менять количество\n\n        //     // todo вынести в отдельную функцию\n\n        // },\n\n        setCartProduct(state, { payload }: PayloadAction<CartProduct>) {\n            // todo - переписать нормально\n            let s = 0;\n            state.cart.forEach((item: any) => {\n                if (item.id === payload.id && item.color === payload.color) {\n                    // console.log('ODINAKOVI ', payload.id);\n                    item.quantity += payload.quantity;\n                    s = 1;\n                    return\n                }\n            })\n            if (!s) { state.cart.push(payload); }\n        },\n\n        // todo удалить товар из корзины ??\n        delCartProduct(state, { payload }: PayloadAction<CartProduct>) {\n            state.cart.forEach((item: any, idx: number) => {\n                // console.log(state.cart[0].id, 'id-cart');\n                if (item.id === payload.id && item.color === payload.color) {\n                    // console.log('item-delete - product', item.id, idx);\n                    item.quantity = 0;\n                    // const newState = [...state.cart(0, idx + 1), ...state.cart(idx)]\n                    // state.cart = newState\n                }\n            })\n        },\n    },\n    extraReducers: (builder) => {\n        // builder\n        // .addMatcher(\n        //     isAnyOf(setCartProduct.fulfilled),\n        //     (state, action: PayloadAction<any>) => {\n        //         // console.log(state, 'state!!--cart');\n        //         // console.log(action.payload, 'action.payload');\n        //         state.cart.push(action.payload)\n        //     }\n        // );\n    },\n\n})\n\nexport const CartProductReduser = Cart.reducer;\nexport const { setCartProduct, delCartProduct } = Cart.actions"],"mappings":"AAAA,SAASA,WAAT,QAAoD,kBAApD;AAmBA,MAAMC,YAAgC,GAAG;EACrCC,IAAI,EAAE;AAD+B,CAAzC;AAMA,MAAMC,IAAI,GAAGH,WAAW,CAAC;EACrBI,IAAI,EAAE,MADe;EAErBH,YAFqB;EAGrBI,QAAQ,EAAE;IACN;IACA;IAEA;IAEA;IAEA;IAEAC,cAAc,CAACC,KAAD,QAAiD;MAAA,IAAzC;QAAEC;MAAF,CAAyC;MAC3D;MACA,IAAIC,CAAC,GAAG,CAAR;MACAF,KAAK,CAACL,IAAN,CAAWQ,OAAX,CAAoBC,IAAD,IAAe;QAC9B,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,IAA0BD,IAAI,CAACE,KAAL,KAAeL,OAAO,CAACK,KAArD,EAA4D;UACxD;UACAF,IAAI,CAACG,QAAL,IAAiBN,OAAO,CAACM,QAAzB;UACAL,CAAC,GAAG,CAAJ;UACA;QACH;MACJ,CAPD;;MAQA,IAAI,CAACA,CAAL,EAAQ;QAAEF,KAAK,CAACL,IAAN,CAAWa,IAAX,CAAgBP,OAAhB;MAA2B;IACxC,CAtBK;;IAwBN;IACAQ,cAAc,CAACT,KAAD,SAAiD;MAAA,IAAzC;QAAEC;MAAF,CAAyC;MAC3DD,KAAK,CAACL,IAAN,CAAWQ,OAAX,CAAmB,CAACC,IAAD,EAAYM,GAAZ,KAA4B;QAC3C;QACA,IAAIN,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,IAA0BD,IAAI,CAACE,KAAL,KAAeL,OAAO,CAACK,KAArD,EAA4D;UACxD;UACAF,IAAI,CAACG,QAAL,GAAgB,CAAhB,CAFwD,CAGxD;UACA;QACH;MACJ,CARD;IASH;;EAnCK,CAHW;EAwCrBI,aAAa,EAAGC,OAAD,IAAa,CACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH;AAlDoB,CAAD,CAAxB;AAsDA,OAAO,MAAMC,kBAAkB,GAAGjB,IAAI,CAACkB,OAAhC;AACP,OAAO,MAAM;EAAEf,cAAF;EAAkBU;AAAlB,IAAqCb,IAAI,CAACmB,OAAhD"},"metadata":{},"sourceType":"module"}