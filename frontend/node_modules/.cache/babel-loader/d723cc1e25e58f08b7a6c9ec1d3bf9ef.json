{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ProductsReducer } from \"./productsReducer/productsReducer\"; // мерджим редюсеры в один\n\nconst rootReducer = combineReducers({\n  products: ProductsReducer\n}); // создаем стор - передаем туда объект - редюсер\n\nexport const store = configureStore({\n  reducer: rootReducer\n}); // типы\n\n// типизируем useDispatch\nexport const useAppDispatch = useDispatch; // типизируем useSelector\n\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","useSelector","ProductsReducer","rootReducer","products","store","reducer","useAppDispatch","useAppSelector"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { ProductsReducer } from \"./productsReducer/productsReducer\";\n\n// мерджим редюсеры в один\nconst rootReducer = combineReducers({\n    products: ProductsReducer\n})\n\n// создаем стор - передаем туда объект - редюсер\nexport const store = configureStore({\n    reducer: rootReducer\n})\n\n// типы\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\n\n// типизируем useDispatch\nexport const useAppDispatch: () => AppDispatch = useDispatch\n\n// типизируем useSelector\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AACA,SAASC,eAAT,QAAgC,mCAAhC,C,CAEA;;AACA,MAAMC,WAAW,GAAGL,eAAe,CAAC;EAChCM,QAAQ,EAAEF;AADsB,CAAD,CAAnC,C,CAIA;;AACA,OAAO,MAAMG,KAAK,GAAGN,cAAc,CAAC;EAChCO,OAAO,EAAEH;AADuB,CAAD,CAA5B,C,CAIP;;AAIA;AACA,OAAO,MAAMI,cAAiC,GAAGP,WAA1C,C,CAEP;;AACA,OAAO,MAAMQ,cAA+C,GAAGP,WAAxD"},"metadata":{},"sourceType":"module"}