{"ast":null,"code":"import { createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { getTags } from \"../../thunks/tags\";\nconst initialState = {\n  all: []\n};\nconst Tags = createSlice({\n  name: 'tags',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addMatcher(isAnyOf(getTags.fulfilled), (state, action) => {\n      state.all = action.payload;\n    });\n  }\n});\nexport const TagsReducer = Tags.reducer;\nexport const {} = Tags.actions;","map":{"version":3,"names":["createSlice","isAnyOf","getTags","initialState","all","Tags","name","reducers","extraReducers","builder","addMatcher","fulfilled","state","action","payload","TagsReducer","reducer","actions"],"sources":["/Users/nn/Desktop/try/LB1/frontend/src/redux/reducers/tagReducer/tagReducer.ts"],"sourcesContent":["import {createSlice, isAnyOf, PayloadAction} from \"@reduxjs/toolkit\";\nimport { getTags, TagItem } from \"../../thunks/tags\";\n\n\n interface TagState {\n \tall: Array<TagItem>\n }\n\n const initialState: TagState = {\n \tall: []\n }\n\n\n const Tags = createSlice({\n \tname: 'tags',\n \tinitialState,\n \treducers: { },\n \textraReducers: (builder) => {\n \t\tbuilder\n \t\t\t.addMatcher(\n \t\t\t\tisAnyOf(getTags.fulfilled),\n \t\t\t\t(state, action: PayloadAction<Array<TagItem>>) => {\n \t\t\t\t\tstate.all = action.payload\n \t\t\t\t}\n \t\t\t)\n \t}\n })\n\n export const TagsReducer = Tags.reducer\n export const {} = Tags.actions\n"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,OAArB,QAAkD,kBAAlD;AACA,SAASC,OAAT,QAAiC,mBAAjC;AAOC,MAAMC,YAAsB,GAAG;EAC9BC,GAAG,EAAE;AADyB,CAA/B;AAKA,MAAMC,IAAI,GAAGL,WAAW,CAAC;EACxBM,IAAI,EAAE,MADkB;EAExBH,YAFwB;EAGxBI,QAAQ,EAAE,EAHc;EAIxBC,aAAa,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CACLC,UADF,CAEET,OAAO,CAACC,OAAO,CAACS,SAAT,CAFT,EAGE,CAACC,KAAD,EAAQC,MAAR,KAAkD;MACjDD,KAAK,CAACR,GAAN,GAAYS,MAAM,CAACC,OAAnB;IACA,CALH;EAOA;AAZuB,CAAD,CAAxB;AAeA,OAAO,MAAMC,WAAW,GAAGV,IAAI,CAACW,OAAzB;AACP,OAAO,MAAM,KAAKX,IAAI,CAACY,OAAhB"},"metadata":{},"sourceType":"module"}